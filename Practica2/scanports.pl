# Lleva a cabo un escaneo de puertos sobre el equipo indicado. 
# Se puede especificar un intervalo de puertos a revisar.
#
# Autor: Jose Luis Torres Rodriguez
#
#!/usr/bin/perl

use warnings;
use strict;
use Socket;
use Getopt::Long;

my (%options);

# Solamente aceptamos la opcion --help o -h
GetOptions (\%options, 'help|h');

if ($options{help}){
    &muestraAyuda();
    exit (1);
}

my ($ip, $proto, $portInf, $portSup, $puertoActual, $sockPrueba, $noAbiertos, $servidor);

# Utilizaremos TCP para realizar las conexiones
$proto = getprotobyname('tcp');

# Leemos los argumentos
($ip, $portInf, $portSup) = @ARGV;

# Si no se proporciona la IP trabajamos sobre localhost
if (not $ip){
    $ip = "localhost";
}
else{
    # Si el primer argumento no corresponde a una direccion IP v4
    if (not ($ip=~ m/^(\d\d?\d?)\.(\d\d?\d?)\.(\d\d?\d?)\.(\d\d?\d?)/ && ($1 <= 255 && $2 <= 255 && $3 <= 255 && $4 <= 255 ))){
	print "Error: IP invalida.\n";
	&muestraAyuda();
	exit(1);
    }
}
# Si no se proporciona el intervalo de puertos
if (not $portInf){
    $portInf = 1;
    $portSup = 1024;
}
else {
    # Si se proporcionan los dos puertos los verificamos
    if ($portSup){
	if (not $portInf =~ /\d{1,4}/ or not $portSup =~ /\d{1,4}/ or $portInf < 1 or $portInf > 65535 or $portSup < 1 or $portSup > 65535){
	    print "Error: puerto invalido.\n";
	    &muestraAyuda();
	    exit(1);
	}
    }
    else{
	# Si solamente se proporciona un puerto, lo verificamos
	if (not $portInf =~ /\d{1,4}/ or $portInf < 1 or $portInf > 65535){
	    print "Error: puerto invalido.\n";
	    &muestraAyuda();
	    exit(1);
	}
	else {
	    if ($portInf > 1){
		$portSup = $portInf;
		$portInf = 1;
	    }
	    else{
		$portSup = 1024;
	    }
	}
    }
}

print "Puerto\tEstado\n";

$servidor = inet_aton($ip);

for ($puertoActual = $portInf, $noAbiertos=0; $puertoActual <= $portSup; $puertoActual ++) {
    # Creamos un socket para conectarnos por medio de TCP
    socket(SOCKET, PF_INET, SOCK_STREAM, $proto);
    $sockPrueba = sockaddr_in($puertoActual, $servidor);

    # Intentamos la conexion e indicamos si el puerto actual esta abierto
    if (connect(SOCKET, $sockPrueba)) {
        printf "$puertoActual\tAbierto\n";
        close SOCKET || die "Error al cerrar la conexion: $!\n";
	$noAbiertos++;
    }
}

print "Proceso finalizado.\n";
print "Se encontraron $noAbiertos puertos abiertos.\n";

sub muestraAyuda() {
    print "$0 lleva a cabo un escaneo de puertos en el equipo indicado, permite especificar un rango de puertos a revisar.\n\n";
    print "Uso: ./$0 [--help|-h] [direccion] [puerto inicial] [puerto final]\n\n";
    print "--help o -h\t\tMuestra esta ayuda\n";
    print "[direccion]\t\tCorresponde a la direccion del equipo a escanear, si no se proporciona el programa se ejecuta sobre 'localhost'.\n";
    print "[puerto inicial]\tIndica el limite inferior del intervalo de puertos a revisar.\n";
    print "[puerto final]\t\tIndica el limite superior del intervalo de puertos a revisar.\n\n";
    print "En caso de no especificarse el intervalo, el escaneo se lleva a cabo sobre los puetos bien conocidos.\n"
}
